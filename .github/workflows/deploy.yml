name: Deploy Lambda Function

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Environment
      run: |
        docker pull public.ecr.aws/sam/build-python3.9

    - name: Install dependencies and package Lambda using Docker
      run: |
        docker run --rm -v "$PWD":/var/task public.ecr.aws/sam/build-python3.9 /bin/bash -c "
          pip install -r /var/task/requirements.txt -t /var/task/package &&
          cp /var/task/main.py /var/task/package/ &&
          cp -r /var/task/Classes /var/task/package/ &&
          cp -r /var/task/Utils /var/task/package/ &&
          cd /var/task/package &&
          zip -r /var/task/dayoff-lambda.zip ."

    - name: Install AWS CLI
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install

    - name: Delete previous S3 upload
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws s3 rm "s3://dayoff-bucket/lambda/zipped_functions/dayoff-lambda.zip" --region us-east-1

    - name: Upload to S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws s3 cp "dayoff-lambda.zip" "s3://dayoff-bucket/lambda/zipped_functions/dayoff-lambda.zip" --region us-east-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: '1.0.0'

    - name: Apply Terraform
      run: |
        cd terraform
        terraform init
        terraform apply -auto-approve